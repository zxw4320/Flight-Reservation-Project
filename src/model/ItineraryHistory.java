package model;

import ui.AFRSInterface;

import java.util.HashMap;
import java.util.List;

/**
 * Represents a history of all itineraries generated by the last info request
 * for each interface.
 */
public class ItineraryHistory {

    HashMap<AFRSInterface, List<Itinerary>> itineraryHashMap;

    public ItineraryHistory(){
        itineraryHashMap = new HashMap<>();
    }

    /**
     * Gets itinerary for ui based on the id from the last info request
     * executed by that ui
     * @param ui ui that is making itinerary selection
     * @param id the id from the last info request
     * @return The associated itinerary
     */
    public Itinerary getItinerary(AFRSInterface ui, int id){
        // get the list from the hashmap
        List<Itinerary> itineraryList = itineraryHashMap.get(ui);

        // put ID into what was displayed (1-n) => (0-(n-1))
        id -= 1;

        // return null if out of bounds
        if(id < 0 || id >= itineraryList.size()){
            return null;
        }
        else {
            return itineraryList.get(id);
        }
    }

    /**
     * Adds an itinerary list to the history
     * @param ui The ui that made the info request
     * @param itineraryList The list of itineraries to store
     */
    public void addItineraries(AFRSInterface ui, List<Itinerary> itineraryList){
        itineraryHashMap.put(ui,itineraryList);
    }

}
